@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100;0,9..40,200;0,9..40,300;0,9..40,400;0,9..40,500;0,9..40,600;0,9..40,700;0,9..40,800;0,9..40,900;0,9..40,1000;1,9..40,100;1,9..40,200;1,9..40,300;1,9..40,400;1,9..40,500;1,9..40,600;1,9..40,700;1,9..40,800;1,9..40,900;1,9..40,1000");

a {
  @apply underline text-stone-600 hover:text-orange-500 after:content-['_â†—'];
}

#prose-content {
  @apply prose-sm prose-stone prose-headings:font-serif prose-h1:sm:text-5xl text-pretty prose-img:mb-2 prose-headings:tracking-tight;
}

#prose-content > p > img + em {
  @apply text-stone-500 text-sm;
}

/* code blocks (not inline!) */
#prose-content pre.highlight {
  @apply rounded-md bg-stone-50 border border-stone-200;
}

/*
  inline code (not code blocks!)
	we target .prose p code, rather than using prose-code:, so that we
	only format inline code blocks.
*/
.prose p code::before {
  content: "";
}

.prose p code::after {
  content: "";
}
.prose p code {
  @apply bg-stone-100/80 border-2 rounded-md py-0.5 px-1.5 text-stone-800 font-semibold;
}

.prose blockquote ::before {
  content: "";
}

.prose blockquote ::after {
  content: "";
}

.prose blockquote {
  @apply text-orange-950 bg-orange-100 border-orange-300 border-r-2 border-l-8 border-y-2 rounded-r-xl pr-2;
}

.prose blockquote * ::before {
  content: "";
}

.prose blockquote * ::after {
  content: "";
}
